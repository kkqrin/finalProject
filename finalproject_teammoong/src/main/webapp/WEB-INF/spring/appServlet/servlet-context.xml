<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- DB 접속정보를 저장하는 객체 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
<!-- 		<beans:property name="url" value="jdbc:oracle:thin:@192.168.219.101:1521:xe" /> -->
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<beans:property name="username" value="moong" />
		<beans:property name="password" value="1234" />
	</beans:bean>
 	<!-- JDBCTemplate mybatis사용으로 미사용 --> 
<!-- 	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"> -->
<!-- 		<beans:property name="dataSource" ref="dataSource"></beans:property> -->
<!-- 	</beans:bean> -->
	<!-- mybatis 설정 객체 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:mybatis-config.xml" />
		<beans:property name="mapperLocations" value="classpath:/mapper/*SQL.xml" />
	</beans:bean>
	<!-- DB작업을 수행하는 객체 -->
	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSession"></beans:constructor-arg>
	</beans:bean>
	
	<!-- 트랜젝션 관리 객체 생성 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<!-- @Transactional 어노테이션 사용 설정 -->
	<tx:annotation-driven/>
	
	<!-- 파일 업로드용 객체 생성 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104857600" />
	</beans:bean>
	
	<!--
		<beans:bean id="aopClass명" class="패키지포함된클래스명" />
		aop:pointcut -> expression = 리턴값 패키지 클래스명 메소드명(매개변수)
		aop:pointcut -> id="목적에 맞는 아이디 설정"
		aop:aspect -> ref="beans:bean의 id값" 으로 연결 (자동완성을 사용하는게 오타발생률 줄일수있음)
		aop:before -> method=aop class의 메소드 이름
		aop:before -> pointcut-ref ="aop pointcut의 id값
	  -->
<!-- 	<beans:bean id="logAdvice1" class="kr.or.aop.LogAdvice1" /> -->
<!-- 	<beans:bean id="logAdvice2" class="kr.or.aop.LogAdvice2" /> -->
<!-- 	<beans:bean id="bt" class="kr.or.aop.BeforeAdvice" /> -->
<!-- 	<beans:bean id="ar" class="kr.or.aop.AfterReturnAdvice" /> -->
<!-- 	<beans:bean id="around" class="kr.or.aop.AroundAdvice" /> -->
	
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut expression="execution(* kr.or.member.model.service.MemberService.selectOneMember(..))" id="firstPointcut"/> -->
<!-- 		<aop:pointcut expression="execution(* kr.or.member.model.service.MemberService.*Member(..))" id="memberPointcut"/> -->
<!-- 		<aop:pointcut expression="execution(* kr.or.member.model.service.MemberService.*(..))" id="allPointcut"/> -->
<!-- 		<aop:pointcut expression="execution(* kr.or.member.model.service.MemberService.*Member())" id="selectAll"/> -->
		
<!-- 		<aop:aspect ref="around"> -->
<!-- 			<aop:around method="aroundTest" pointcut-ref="allPointcut"/> -->
<!-- 		</aop:aspect> -->
<!-- 			<aop:aspect ref="ar"> -->
<!-- 				<aop:after-returning method="arTest" pointcut-ref="selectAll" returning="returnObj" /> -->
<!-- 			</aop:aspect> -->
		
<!-- 		<aop:aspect ref="bt"> -->
<!-- 			<aop:before method="test2" pointcut-ref="firstPointcut"/> -->
<!-- 		</aop:aspect> -->
<!-- 		<aop:aspect ref="logAdvice1"> -->
<!-- 			<aop:before method="testLog" pointcut-ref="firstPointcut"/>		 -->
<!-- 		</aop:aspect> -->
<!-- 		<aop:aspect ref="logAdvice2"> -->
<!-- 			<aop:before method="logging" pointcut-ref="memberPointcut"/> -->
<!-- 		</aop:aspect> -->
<!-- 	</aop:config> -->
	<!-- AOP annotation설정 활성화 -->
	<aop:aspectj-autoproxy />
	<!-- 예약작업 어노테이션 설정 활성화 -->
	<task:annotation-driven/>
	
	
	
	<context:component-scan base-package="kr.or.iei" />
	<context:component-scan base-package="moo.ng.san" />
	
	
	
	<!-- 장형천 -->
	<context:component-scan base-package="moo.ng.san.admin" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 안진배 -->
	
	<context:component-scan base-package="moo.ng.san.notice" />
	<context:component-scan base-package="moo.ng.san.dayCheck" />
	<context:component-scan base-package="moo.ng.san.askItem" />
	<context:component-scan base-package="moo.ng.san.coupon" />
	<context:component-scan base-package="moo.ng.san.pay" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 김홍미 -->
	<context:component-scan base-package="moo.ng.san.member" />
	<context:component-scan base-package="common" />
	<context:component-scan base-package="moo.ng.san.dm" />
	
	
	<!-- 메일링 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="username" value="janetcode65@gmail.com"/>
		<beans:property name="password" value="dupdimqawjlywssr"></beans:property>
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>				
				<beans:prop key="mail.smtp.ssl.protocols">TLSv1.2</beans:prop>
				<beans:prop key="mail.smtp.ssl.trust">smtp.gmail.com</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- ☆☆☆ 실시간 쪽지를 처리할 객체 생성 -->
	<beans:bean id ="dmCount" class="moo.ng.san.dm.model.service.DirectMessageHandler" />
	<!-- 웹소켓 매핑 -->
	<websocket:handlers>
		<websocket:mapping handler="dmCount" path="/dm.do"/>
	</websocket:handlers>
	
	
	
	
	
	
	
	
	<!--이화정  -->
	<context:component-scan base-package="moo.ng.san.board" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 김규린 -->
	<context:component-scan base-package="moo.ng.san.order" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	김명훈	 -->
	<context:component-scan base-package="moo.ng.san.category" />
	<context:component-scan base-package="moo.ng.san.product" />
	<context:component-scan base-package="moo.ng.san.like" />
	<context:component-scan base-package="moo.ng.san.inquiry" />
	<context:component-scan base-package="moo.ng.san.gonggu" />
	<context:component-scan base-package="moo.ng.san.review" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans:beans>
